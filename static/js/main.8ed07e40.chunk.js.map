{"version":3,"sources":["components/Menu.js","components/Home.js","components/Product.js","components/ProductInfo.js","components/About.js","components/Soon.js","App.js","index.js"],"names":["Menu","className","to","type","placeholder","value","Home","Fragment","Product","props","items","data","map","item","id","productName","url","price","tags","description","key","src","alt","ProductInfo","console","log","moreInfo","filter","inventory","label","link","href","About","Soon","App","basename","process","path","exact","component","match","Data","params","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"g2EA0CeA,EAvCF,WACX,OACE,gCAQE,kBAAC,IAAD,CAAMC,UAAU,iBAAiBC,GAAG,SAClC,qCAEF,yBAAKD,UAAU,QAEb,0BAAMA,UAAU,oBACd,2BAAOA,UAAU,aAAaE,KAAK,OAAQC,YAAY,WAIvD,2BAAOH,UAAU,eAAeE,KAAK,SAASE,MAAM,aAMxD,6BACE,kBAAC,IAAD,CAAMJ,UAAU,iBAAiBC,GAAG,YAClC,wCAGF,kBAAC,IAAD,CAAMD,UAAU,iBAAiBC,GAAG,UAClC,yCCzBKI,EARF,WACX,OACE,kBAAC,IAAMC,SAAP,KACE,sCCkCSC,EApCC,SAACC,GACf,IAAMC,EAAQD,EAAME,KAAKC,KAAI,SAACC,GAAU,IAC9BC,EAAmDD,EAAnDC,GAAIC,EAA+CF,EAA/CE,YAAaC,EAAkCH,EAAlCG,IAAKC,EAA6BJ,EAA7BI,MAAOC,EAAsBL,EAAtBK,KAAMC,EAAgBN,EAAhBM,YAE3C,OACE,kBAAC,IAAD,CAAMC,IAAKN,EAAIZ,GAAE,mBAAcY,IAG7B,wBAAIb,UAAU,QAAQmB,IAAKN,GACzB,4BAAKC,GAGL,yBAAKd,UAAU,UAAUoB,IAAKL,EAAKM,IAAKJ,IAGxC,2BAAIC,GAEJ,sCAAYF,QAWpB,OACE,kBAAC,IAAMV,SAAP,KACE,uCACA,wBAAIN,UAAU,sBAAsBS,KCW3Ba,EA3CK,SAACd,GACnBe,QAAQC,IAAIhB,GACZ,IACMiB,EADejB,EAAME,KAAKgB,QAAO,SAACd,GAAD,OAAUA,EAAKC,IAAML,EAAMK,MACpCF,KAAI,SAACC,GAAS,IAKxCC,EASED,EATFC,GACAC,EAQEF,EARFE,YACAC,EAOEH,EAPFG,IAEAY,GAKEf,EANFI,MAMEJ,EALFe,WACAV,EAIEL,EAJFK,KACAW,EAGEhB,EAHFgB,MACAC,EAEEjB,EAFFiB,KACAX,EACEN,EADFM,YAKF,OACE,yBAAKC,IAAKN,EAAIb,UAAU,aACtB,wBAAIA,UAAU,wBAAwBc,GACtC,yBAAKd,UAAU,UAAUoB,IAAKL,EAAKM,IAAKJ,IACxC,4BAAKU,GACL,uBAAGG,KAAMD,GAAT,aACA,4BAAKD,GACL,2BAAIV,OAKV,OACE,kBAAC,IAAMZ,SAAP,KACE,yBAAKN,UAAU,gBACb,2CACCyB,KC3BMM,EAVD,WACZ,OACE,kBAAC,IAAMzB,SAAP,KACE,yBAAKN,UAAU,SACb,2CCAOgC,EAJF,WACX,OAAO,4CC8DMC,E,uKAhDX,OACE,kBAAC,IAAD,CAAQC,SAAUC,2BAChB,kBAAC,EAAD,MACA,4CACA,kBAAC,IAAD,KAWE,kBAAC,IAAD,CAAOC,KAAMD,2BAA8BE,OAAK,EAACC,UAAWjC,IAQ5D,kBAAC,IAAD,CAAO+B,KAAK,SAASC,OAAK,EAACC,UAAWP,IACtC,kBAAC,IAAD,CACEK,KAAK,eACLE,UAAW,gBAAGC,EAAH,EAAGA,MAAH,OACT,kBAAC,EAAD,CAAa7B,KAAM8B,EAAM3B,GAAI0B,EAAME,OAAO5B,QAG9C,kBAAC,IAAD,CACEuB,KAAK,WACLC,OAAK,EACLC,UAAW,kBAAM,kBAAC,EAAD,CAAS5B,KAAM8B,OAElC,kBAAC,IAAD,CACEJ,KAAM,iBAAM,SACZE,UAAWN,U,GAvCLU,aCVlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8ed07e40.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Menu = () => {\n  return (\n    <header>\n      {/*\n      \n      -Whenever you are using router, \n      you need to wrap things in such way.\n      \n      - You will wrap in between the <Link> </Link> what you \n      want to be converted in LINKS  */}\n      <Link className=\"style-link-nav\" to=\"/Home\">\n        <h3>logo</h3>\n      </Link>\n      <div className=\"text\">\n        {/* --------  FORM related 2 -------- */}\n        <form className=\"form-searchfield\">\n          <input className=\"input-text\" type=\"text\"  placeholder=\"hellos\"/>\n\n          {/* --- */}\n\n          <input className=\"input-search\" type=\"submit\" value=\"search\" />\n        </form>\n\n        {/* --------  FORM -------- */}\n      </div>\n\n      <nav>\n        <Link className=\"style-link-nav\" to=\"/product\">\n          <li>Product</li>\n        </Link>\n\n        <Link className=\"style-link-nav\" to=\"/about\">\n          <li>About</li>\n        </Link>\n      </nav>\n    </header>\n  );\n};\n\nexport default Menu;\n","import React from \"react\";\n\nconst Home = () => {\n  return (\n    <React.Fragment>\n      <h4>Home</h4>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Product = (props) => {\n  const items = props.data.map((item) => {\n    const { id, productName, url, price, tags, description } = item;\n\n    return (\n      <Link key={id} to={`/product/${id}`}>\n        {/*  */}\n\n        <li className=\"quote\" key={id}>\n          <h1>{productName}</h1>\n          {/* ---- img -----*/}\n\n          <img className=\"img-box\" src={url} alt={tags} />\n\n          {/* ---- img -----*/}\n          <p>{description}</p>\n\n          <h5>&euro; {price}</h5>\n\n          {/* ---- Btn ----- */}\n        </li>\n      </Link>\n\n      //\n      // ------------------\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <h4>Product</h4>\n      <ul className=\"container-products\">{items}</ul>\n    </React.Fragment>\n  );\n};\n\nexport default Product;\n","import React from \"react\";\n\nconst ProductInfo = (props) => {\n  console.log(props);\n  const selectedItem = props.data.filter((item) => item.id == props.id);\n  const moreInfo = selectedItem.map((item) => {\n    //\n    //\n    //\n    const {\n      id,\n      productName,\n      url,\n      price,\n      inventory,\n      tags,\n      label,\n      link,\n      description,\n    } = item;\n    //\n    //\n    //\n    return (\n      <div key={id} className=\"box-quote\">\n        <h3 className=\"headline-productName\">{productName}</h3>\n        <img className=\"img-box\" src={url} alt={tags} />\n        <h4>{inventory}</h4>\n        <a href={link}>More info</a>\n        <h5>{label}</h5>\n        <p>{description}</p>\n      </div>\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <div className=\"product-info\">\n        <h4>ProductInfo</h4>\n        {moreInfo}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ProductInfo;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <React.Fragment>\n      <div className=\"about\">\n        <h3>About Me</h3>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst Soon = () => {\n  return <h4>Coming Soon</h4>;\n};\n\nexport default Soon;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// I can convert a react module with a long name into what want, ex:\n// {BrowserRouter} i can change it to just Router by typing \"as\" like so:\n// { BrowserRouter as Router, Switch, Route }\n\n//\nimport Data from \"./data.json\";\nimport Menu from \"./components/Menu\";\nimport Home from \"./components/Home\";\nimport Product from \"./components/Product\";\nimport ProductInfo from \"./components/ProductInfo\";\nimport About from \"./components/About\";\nimport Soon from \"./components/Soon\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Menu />\n        <h1>Online Store</h1>\n        <Switch>\n          {/* \nnormal:  <Route path=\"/\" exact component={Home} />\n\n\n          Use this way if there s a problem with the DEPLOYment:\n          <Route path={process.env.PUBLIC_URL + \"/\"} exact component={Home} /> \n          \n                PUBLIC_URL will grab the root URL from that server, and \n\n          */}\n          <Route path={process.env.PUBLIC_URL + \"/\"} exact component={Home} />\n          {/* -------------- */}\n          {/*\n          Te way below is too much compared to the other ones\n          \n          <Route path=\"/about\" component={About} >\n            <About name=\"Hadi\" />\n          </Route> */}\n          <Route path=\"/about\" exact component={About} />\n          <Route\n            path=\"/product/:id\"\n            component={({ match }) => (\n              <ProductInfo data={Data} id={match.params.id} />\n            )}\n          />\n          <Route\n            path=\"/product\"\n            exact\n            component={() => <Product data={Data} />}\n          />\n          <Route\n            path={() => \"/main\" || \"/admin\" || \"/any-other-word\"}\n            component={Soon}\n          />\n          {/* \n           <Route path=\"/*\" component={Soon} />\n          */}\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n/**\n\n\n   \n          \n          -The example below is not ideal for all the ways:\n              <Route path=\"/product\" component={() => <Product data={Data} />} />\n          - <Product data={Data} /> to see the maping of this go to the Product.js\n\n        \n\nthe href like for links from react, how can you reach them from\nscss without having to add a class ?\n\n\n */\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/main.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}